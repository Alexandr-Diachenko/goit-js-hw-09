{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACZC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,yBAErC,SAASI,EAAcC,EAAUC,GACjC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC7B,IAAIC,EAAgBC,KAAKC,SAAW,GACnCC,YAAW,KACNH,EACHF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE1BA,EAAM,G,CAIVT,EAAKC,KAAKgB,iBAAiB,UAAWC,IACrCA,EAAEC,iBACF,IAAIC,EAAQC,OAAOrB,EAAKI,WAAWkB,OACnC,MAAMC,EAAWvB,EAAKM,YAAYgB,MAClC,IAAIE,EAAOH,OAAOrB,EAAKK,UAAUiB,OACjC,IAAK,IAAIG,EAAI,EAAGA,GAAKF,EAAUE,IAC9BlB,EAAckB,EAAEL,GACfM,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACnBkB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAqBrB,QAAiBC,MAAU,IAEvEqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MACpBkB,EAAA7B,GAAS8B,OAAOG,QAAQ,sBAAoBvB,QAAeC,MAAU,IAErEW,GAAgBI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n\tform: document.querySelector('.form'),\n\tdelayInput: document.querySelector('input[name=\"delay\"]'),\n\tstepInput: document.querySelector('input[name=\"step\"]'),\n\tamountInput: document.querySelector('input[name=\"amount\"]'),\n};\nfunction createPromise(position, delay) {\nreturn new Promise((resolve, reject)=> {\nlet shouldResolve = Math.random() > 0.3;\n\tsetTimeout(()=> {\n\t\tif (shouldResolve) {\n\t\t\tresolve({ position, delay });\n\t\t} else {\n\t\t\treject({ position, delay });\n\t\t} \n\t}, delay);\n\t})\n}\n\nrefs.form.addEventListener('submit', (e) => {\n\te.preventDefault()\n\tlet delay = Number(refs.delayInput.value);\n\tconst position = refs.amountInput.value\n\tlet step = Number(refs.stepInput.value);\n\tfor (let i = 1; i <= position; i++) {\n\t\tcreatePromise(i,delay)\n\t\t.then(({ position, delay }) => {\n\t\tNotiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n\t\t})\n\t\t.catch(({ position, delay }) => {\n\t\tNotiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n\t\t});\n\t\tdelay = delay + step;\t\n\t}\n})\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delayInput","stepInput","amountInput","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","delay1","Number","value","position1","step","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.fb870126.js.map"}